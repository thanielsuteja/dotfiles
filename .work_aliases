# tvlk -- {{{

alias python="python3"

alias work="~/tmux-work.sh"

alias j11="sdk use java 11.0.22-tem"
alias j17="sdk use java 17.0.11-tem"
alias j21="sdk use java 21.0.4-tem"

export local_boti="http://localhost:8080"
export stg_boti="https://cxpboti.cxp.staging-traveloka.com"
export prod_boti="https://cxpboti.cxp.traveloka.com"
export local_igw="http://localhost:62021"
export stg_igw="https://cxpigw.cxp.stg-tvlk.com"

bash-ecs() {
    aws ecs execute-command --region ap-southeast-1 --cluster $1 \
    --task $2 \
    --container datadog \
    --interactive \
    --command "/bin/bash"
}

ecs-task-list() {
    # List clusters and store the ARNs in an array
    cluster_arns=($(aws ecs list-clusters --query 'clusterArns' --output json | jq -r '.[]'))

    # Iterate through each cluster ARN
    for cluster_arn in "${cluster_arns[@]}"
    do
        cluster_name=$(basename "$cluster_arn")

        # List tasks for the cluster and extract relevant information
        tasks_info=$(aws ecs list-tasks --cluster "$cluster_arn" --output json | jq -r '.taskArns[]')

        # Iterate through each task ARN
        while IFS= read -r task_arn
        do
            service_name=$(aws ecs describe-tasks --tasks "$task_arn" --cluster "$cluster_arn" --output json | jq -r '.tasks[0].group')
            task_id=$(basename "$task_arn")

            # Print the information in table format
            echo "$cluster_name | $service_name | $task_id"
        done <<< "$tasks_info"
    done
}

_connect_to() {
    assume PowerUser@tvlk-cxp-$1 && \
    bash-ecs $(ecs-task-list | grep cxp$2 | awk -F ' \\| ' '{print $1, $3}' | sed 's/service://')
}

alias stg="_connect_to stg $1"
alias prod="_connect_to prod $1"

sbuild() {
    if [ -e scripts/assume_role.sh ]; then
        scripts/assume_role.sh && scripts/build.sh
    fi
}

sassume() {
    if [ -e scripts/assume_role.sh ]; then
        scripts/assume_role.sh
    fi
}

estb() {
    ACTIVATE_PRO=0 localstack start -d &&
    assume LocalStagingJumpRole@tvlk-cxp-stg &&
    scripts/establish_proxy_connection.py $1 --profile=LocalStagingJumpRole@tvlk-cxp-stg
}

# }}}

# vim: set ft=bash ts=2 sts=2 sw=2 et
